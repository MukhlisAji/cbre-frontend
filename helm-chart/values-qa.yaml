# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: oneapp-docker-nonprod.us.artifactory.gcso.cbre.com/oneapp-backend-account-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

namespace: ""
env: qa

imagePullSecrets:
  - name: jfrogreg
nameOverride: "oneapp-backend-account-api"
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  name: "default"
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: oneapp-nonprod.cbre.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: "500m"
    memory: "512Mi"
  requests:
    cpu: "250m"
    memory: "256Mi"

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

configmap:
  enable: true
  data:
    camel.servlet.mapping.context-path: /cbre/*
    spring.main.allow-bean-definition-overriding: true
    #API Configuration
    salesforce.account.url: https://cbrecrm--uat2.sandbox.my.salesforce.com/services/data/v61.0/sobjects/Account
    #Database
    spring.datasource.driver-class-name: net.snowflake.client.jdbc.SnowflakeDriver
    spring.jpa.database: default
    spring.jpa.properties.hibernate.dialect: com.cbre.account_api.dialect.SnowflakeDialect
    spring.jpa.properties.hibernate.ddl-auto: none
    spring.jpa.hibernate.ddl-auto: none
    spring.jpa.open-in-view: false
    #enable SQL logging
    #spring.jpa.show-sql=true
    #Log formatted SQL statements
    spring.jpa.properties.hibernate.format_sql: true
    spring.datasource.url: jdbc:snowflake://idb33659.us-east-1.snowflakecomputing.com/?warehouse=DEV_ONEAPP_S_WHS&db=ONEAPP_UAT&schema=DATA
    spring.datasource.username: AP_SVC_SALESMGTSG@CBRE.COM
    hikari.minimum.idle: 20
    hikari.idle.timeout: 60000
    hikari.maximum.pool.size: 50
    fetch.max: 10
    thread.max.pool: 20
    limit.search-by-name: 10

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
